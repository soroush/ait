// Generated by Bisonc++ V2.09.03 on Fri, 19 Jul 2013 01:12:00 +0430

#ifndef DomainParser_h_included
#define DomainParser_h_included

#include "domain_parserbase.h"
#include "domain_scanner.h"
#include <sstream>
#include <vector>

#undef DomainParser
class DomainParser: public DomainParserBase {

public:
	DomainParser(const std::string& input, std::vector<int>& values);
	int parse();

private:
	std::istringstream str;
	DomainLexer d_scanner;
	std::vector<int>& values;

	void error(char const *msg);
	int lex();
	void print();
	void executeAction(int ruleNr);
	void errorRecovery();
	int lookup(bool recovery);
	void nextToken();
};

inline DomainParser::DomainParser(const std::string& input,
		std::vector<int>& values_) :
		str(input), d_scanner(str, std::cout), values(values_) {
}

inline void DomainParser::error(char const *msg) {
	std::cerr << msg << '\n';
}

inline int DomainParser::lex() {
	return d_scanner.lex();
}

inline void DomainParser::print() {
}

#endif
