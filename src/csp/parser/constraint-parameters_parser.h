// Generated by Bisonc++ V2.09.03 on Tue, 23 Jul 2013 10:23:55 +0430

#ifndef ConstraintParametersParser_h_included
#define ConstraintParametersParser_h_included

#include <sstream>
#include <vector>

#include "constraint-parameters_parserbase.h"
#include "constraint-parameters_scanner.h"
#include "../variable.h"
#include "../csp-problem.h"
#include "../constraint.h"

#undef ConstraintParametersParser
class ConstraintParametersParser: public ConstraintParametersParserBase {
public:
    ConstraintParametersParser(const std::string& input,
            AIT::CSP::CSP_Problem* const problem,
            std::vector<AIT::CSP::Constraint::Value>& output);
    int parse();

private:
    std::istringstream str;
    ConstraintParametersLexer d_scanner;
    AIT::CSP::CSP_Problem* const problem;
    std::vector<AIT::CSP::Constraint::Value>& parameters;

    void error(char const *msg);
    int lex();
    void print();
    void executeAction(int ruleNr);
    void errorRecovery();
    int lookup(bool recovery);
    void nextToken();
};

inline ConstraintParametersParser::ConstraintParametersParser(
        const std::string& input, AIT::CSP::CSP_Problem* const problem_,
        std::vector<AIT::CSP::Constraint::Value>& output) :
        str(input), d_scanner(str, std::cout), problem(problem_), parameters(
                output) {
}

inline void ConstraintParametersParser::error(char const *msg) {
    std::cerr << msg << '\n';
}

inline int ConstraintParametersParser::lex() {
    return d_scanner.lex();
}

inline void ConstraintParametersParser::print() {
}

#endif
