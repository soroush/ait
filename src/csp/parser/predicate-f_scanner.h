// Generated by Flexc++ V0.98.00 on Tue, 16 Jul 2013 14:01:19 +0430

#ifndef PredicateFunctionalLexer_H_INCLUDED_
#define PredicateFunctionalLexer_H_INCLUDED_

// $insert baseclass_h
#include "predicate-f_scannerbase.h"


// $insert classHead
class PredicateFunctionalLexer: public PredicateFunctionalLexerBase
{
    public:
        explicit PredicateFunctionalLexer(std::istream &in = std::cin,
                                std::ostream &out = std::cout);

        PredicateFunctionalLexer(std::string const &infile, std::string const &outfile);
        
        // $insert lexFunctionDecl
        int lex();

    private:
        int lex__();
        int executeAction__(size_t ruleNr);

        void print();
        void preCode();     // re-implement this function for code that must 
                            // be exec'ed before the patternmatching starts
};

// $insert scannerConstructors
inline PredicateFunctionalLexer::PredicateFunctionalLexer(std::istream &in, std::ostream &out)
:
    PredicateFunctionalLexerBase(in, out)
{}

inline PredicateFunctionalLexer::PredicateFunctionalLexer(std::string const &infile, std::string const &outfile)
:
    PredicateFunctionalLexerBase(infile, outfile)
{}

// $insert inlineLexFunction
inline int PredicateFunctionalLexer::lex()
{
    return lex__();
}

inline void PredicateFunctionalLexer::preCode() 
{
    // optionally replace by your own code
}

inline void PredicateFunctionalLexer::print() 
{
    print__();
}


#endif // PredicateFunctionalLexer_H_INCLUDED_

