{"name":"Ait","tagline":"Artificial Intelligence Toolkit","body":"# Artificial Intelligence Toolkit [![Build Status](https://travis-ci.org/soroush/ait.png?branch=master)](https://travis-ci.org/soroush/ait)\r\nAIT is a C++ library intended to provide a concrete framework for artificial\r\nintelligence research projects. It's also intended to fill the gap between\r\nacademia and industry in area of AI by providing production-quality implementation\r\nof generic AI concepts and techniques.\r\n\r\n#Compile\r\n**WARNING**: There is no support for Microsoft Visual Studio compilers. Please\r\nuse latest GNU GCC or Clang to compile this project. Earliest MSVC that's able to compile\r\nAIT, will be released in 2015. Current versions do not have capability to\r\ncompile modern C++ code. \r\n\r\n## Dependencies\r\nAIT is based on a modular architecture by design. Each module has it's own\r\ndependencies. Currently there is one module providing a framework to model [constraint satisfaction problems](en.wikipedia.org/wiki/Constraint_satisfaction_problemâ€Ž) and solvers.\r\n\r\n### CSP Library\r\nCSP has a couple of dependencies. Dependency list depends on your needs. The minimal set of dependencies are:\r\n\r\n* [ZeroMQ](XML Data Binding for C++) - High-performance asynchronous messaging library (>=3.0.0)\r\n* [XSD C++](http://www.codesynthesis.com/products/xsd/) - XML Data Binding for C++\r\n* [Protocol Buffers library](http://code.google.com/p/protobuf/) (>= 2.5.0, < 2.6)\r\n* [Boost logging library 2](http://boost-log.sourceforge.net) (>= 1.53.0)\r\n\r\nTo install dependencies in Debian/Ubuntu type:\r\n```bash\r\nsudo apt-get install libprotobuf-dev libzmq3-dev xsdcxx libboost-log-dev\r\n```\r\nAnd in RedHat/Fedora:\r\n```bash\r\nsudo yum install protobuf-devel zeromq-devel xsd boost-log\r\n```\r\n\r\n**Note**: If you are using a higher version of protocol buffers on your system, you'll need to either downgrade it, download sources of an older version and compile it, or choose to re-generate protocol sources compatible with your current version of `libprotobuf`.\r\n\r\nDowngrading `libprotobuf` is likely to break package management system or other programs linked to it. It's highly recommended to statically link against an older compile of the library. To do so, pass path of old protobuf to `--with-protobuf-libdir` option at configure step. Make sure to pass `--enable-precompiled-protocols` to configure script.\r\n\r\nAnother option is to re-generate protocol sources with your own version on `protoc` (protocol buffers C++ compiler). Of course you're required to have `protoc` installed on system. In Debian/Ubuntu type:\r\n```bash\r\nsudo apt-get install protobuf-compiler\r\n```\r\nAnd for RedHat/Fedora:\r\n```bash\r\nsudo yum install protobuf-compiler\r\n```\r\n\r\nPass `--enable-precompiled-protocols=no` to force use of newly generated sources.\r\n\r\nAfter all dependencies satisfied, compile libAIT by typing:\r\n```bash\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install\r\n```\r\n\r\n## Installation\r\nYou can either compile libAIT or download precompiled binaries. Currently a\r\ndebian package repository is maintained in\r\n[~soroush/solap](https://launchpad.net/~soroush-r/+archive/solap) ppa. Also\r\nprecompiled DLL's for Windows are available in sourceforge home page of the\r\nproject.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}